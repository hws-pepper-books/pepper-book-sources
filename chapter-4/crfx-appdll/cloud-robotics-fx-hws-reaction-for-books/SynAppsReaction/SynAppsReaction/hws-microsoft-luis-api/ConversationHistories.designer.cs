#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SynAppsLuis
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="synapps_iot")]
	public partial class ConversationHistoriesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConversationHistory(ConversationHistory instance);
    partial void UpdateConversationHistory(ConversationHistory instance);
    partial void DeleteConversationHistory(ConversationHistory instance);
    #endregion
		
		public ConversationHistoriesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConversationHistoriesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConversationHistoriesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConversationHistoriesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ConversationHistory> ConversationHistories
		{
			get
			{
				return this.GetTable<ConversationHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RBApp.ConversationHistories")]
	public partial class ConversationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DeviceId;
		
		private string _FromUserId;
		
		private string _FromMessage;
		
		private string _ToMessage;
		
		private string _Intent;
		
		private double _Score;
		
		private long _SynAppsAccountId;
		
		private string _SynAppsAccountName;
		
		private long _SynAppAssetId;
		
		private string _Status;
		
		private bool _IsSynAppsLinked;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnFromUserIdChanging(string value);
    partial void OnFromUserIdChanged();
    partial void OnFromMessageChanging(string value);
    partial void OnFromMessageChanged();
    partial void OnToMessageChanging(string value);
    partial void OnToMessageChanged();
    partial void OnIntentChanging(string value);
    partial void OnIntentChanged();
    partial void OnScoreChanging(double value);
    partial void OnScoreChanged();
    partial void OnSynAppsAccountIdChanging(long value);
    partial void OnSynAppsAccountIdChanged();
    partial void OnSynAppsAccountNameChanging(string value);
    partial void OnSynAppsAccountNameChanged();
    partial void OnSynAppAssetIdChanging(long value);
    partial void OnSynAppAssetIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsSynAppsLinkedChanging(bool value);
    partial void OnIsSynAppsLinkedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ConversationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(255)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserId", DbType="NVarChar(255)")]
		public string FromUserId
		{
			get
			{
				return this._FromUserId;
			}
			set
			{
				if ((this._FromUserId != value))
				{
					this.OnFromUserIdChanging(value);
					this.SendPropertyChanging();
					this._FromUserId = value;
					this.SendPropertyChanged("FromUserId");
					this.OnFromUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMessage", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string FromMessage
		{
			get
			{
				return this._FromMessage;
			}
			set
			{
				if ((this._FromMessage != value))
				{
					this.OnFromMessageChanging(value);
					this.SendPropertyChanging();
					this._FromMessage = value;
					this.SendPropertyChanged("FromMessage");
					this.OnFromMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMessage", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string ToMessage
		{
			get
			{
				return this._ToMessage;
			}
			set
			{
				if ((this._ToMessage != value))
				{
					this.OnToMessageChanging(value);
					this.SendPropertyChanging();
					this._ToMessage = value;
					this.SendPropertyChanged("ToMessage");
					this.OnToMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intent", DbType="NVarChar(255)")]
		public string Intent
		{
			get
			{
				return this._Intent;
			}
			set
			{
				if ((this._Intent != value))
				{
					this.OnIntentChanging(value);
					this.SendPropertyChanging();
					this._Intent = value;
					this.SendPropertyChanged("Intent");
					this.OnIntentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float NOT NULL")]
		public double Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppsAccountId", DbType="BigInt NOT NULL")]
		public long SynAppsAccountId
		{
			get
			{
				return this._SynAppsAccountId;
			}
			set
			{
				if ((this._SynAppsAccountId != value))
				{
					this.OnSynAppsAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SynAppsAccountId = value;
					this.SendPropertyChanged("SynAppsAccountId");
					this.OnSynAppsAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppsAccountName", DbType="NVarChar(255)")]
		public string SynAppsAccountName
		{
			get
			{
				return this._SynAppsAccountName;
			}
			set
			{
				if ((this._SynAppsAccountName != value))
				{
					this.OnSynAppsAccountNameChanging(value);
					this.SendPropertyChanging();
					this._SynAppsAccountName = value;
					this.SendPropertyChanged("SynAppsAccountName");
					this.OnSynAppsAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppAssetId", DbType="BigInt NOT NULL")]
		public long SynAppAssetId
		{
			get
			{
				return this._SynAppAssetId;
			}
			set
			{
				if ((this._SynAppAssetId != value))
				{
					this.OnSynAppAssetIdChanging(value);
					this.SendPropertyChanging();
					this._SynAppAssetId = value;
					this.SendPropertyChanged("SynAppAssetId");
					this.OnSynAppAssetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSynAppsLinked", DbType="Bit NOT NULL")]
		public bool IsSynAppsLinked
		{
			get
			{
				return this._IsSynAppsLinked;
			}
			set
			{
				if ((this._IsSynAppsLinked != value))
				{
					this.OnIsSynAppsLinkedChanging(value);
					this.SendPropertyChanging();
					this._IsSynAppsLinked = value;
					this.SendPropertyChanged("IsSynAppsLinked");
					this.OnIsSynAppsLinkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
