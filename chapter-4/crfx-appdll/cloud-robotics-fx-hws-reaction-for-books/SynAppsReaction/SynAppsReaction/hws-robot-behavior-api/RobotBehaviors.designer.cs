#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HwsRobotBehaviorApi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="synapps_iot")]
	public partial class RobotBehaviorsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRobotBehaviorKeyphrase(RobotBehaviorKeyphrase instance);
    partial void UpdateRobotBehaviorKeyphrase(RobotBehaviorKeyphrase instance);
    partial void DeleteRobotBehaviorKeyphrase(RobotBehaviorKeyphrase instance);
    partial void InsertRobotBehavior(RobotBehavior instance);
    partial void UpdateRobotBehavior(RobotBehavior instance);
    partial void DeleteRobotBehavior(RobotBehavior instance);
    partial void InsertRobotBehaviorTalkLog(RobotBehaviorTalkLog instance);
    partial void UpdateRobotBehaviorTalkLog(RobotBehaviorTalkLog instance);
    partial void DeleteRobotBehaviorTalkLog(RobotBehaviorTalkLog instance);
    partial void InsertRobotBehaviorToPerson(RobotBehaviorToPerson instance);
    partial void UpdateRobotBehaviorToPerson(RobotBehaviorToPerson instance);
    partial void DeleteRobotBehaviorToPerson(RobotBehaviorToPerson instance);
    #endregion
		
		public RobotBehaviorsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RobotBehaviorsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RobotBehaviorsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RobotBehaviorsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RobotBehaviorKeyphrase> RobotBehaviorKeyphrases
		{
			get
			{
				return this.GetTable<RobotBehaviorKeyphrase>();
			}
		}
		
		public System.Data.Linq.Table<RobotBehavior> RobotBehaviors
		{
			get
			{
				return this.GetTable<RobotBehavior>();
			}
		}
		
		public System.Data.Linq.Table<RobotBehaviorTalkLog> RobotBehaviorTalkLogs
		{
			get
			{
				return this.GetTable<RobotBehaviorTalkLog>();
			}
		}
		
		public System.Data.Linq.Table<RobotBehaviorToPerson> RobotBehaviorToPersons
		{
			get
			{
				return this.GetTable<RobotBehaviorToPerson>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RBApp.RobotBehaviorKeyphrase")]
	public partial class RobotBehaviorKeyphrase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _SynAppsId;
		
		private string _SynAppsDeviceId;
		
		private string _Keyphrase;
		
		private string _KeyphraseReply;
		
		private string _Status;
		
		private bool _IsSynAppsLinked;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSynAppsIdChanging(int value);
    partial void OnSynAppsIdChanged();
    partial void OnSynAppsDeviceIdChanging(string value);
    partial void OnSynAppsDeviceIdChanged();
    partial void OnKeyphraseChanging(string value);
    partial void OnKeyphraseChanged();
    partial void OnKeyphraseReplyChanging(string value);
    partial void OnKeyphraseReplyChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsSynAppsLinkedChanging(bool value);
    partial void OnIsSynAppsLinkedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RobotBehaviorKeyphrase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppsId", DbType="Int NOT NULL")]
		public int SynAppsId
		{
			get
			{
				return this._SynAppsId;
			}
			set
			{
				if ((this._SynAppsId != value))
				{
					this.OnSynAppsIdChanging(value);
					this.SendPropertyChanging();
					this._SynAppsId = value;
					this.SendPropertyChanged("SynAppsId");
					this.OnSynAppsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppsDeviceId", DbType="NVarChar(255)")]
		public string SynAppsDeviceId
		{
			get
			{
				return this._SynAppsDeviceId;
			}
			set
			{
				if ((this._SynAppsDeviceId != value))
				{
					this.OnSynAppsDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._SynAppsDeviceId = value;
					this.SendPropertyChanged("SynAppsDeviceId");
					this.OnSynAppsDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyphrase", DbType="NVarChar(100)")]
		public string Keyphrase
		{
			get
			{
				return this._Keyphrase;
			}
			set
			{
				if ((this._Keyphrase != value))
				{
					this.OnKeyphraseChanging(value);
					this.SendPropertyChanging();
					this._Keyphrase = value;
					this.SendPropertyChanged("Keyphrase");
					this.OnKeyphraseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyphraseReply", DbType="NVarChar(100)")]
		public string KeyphraseReply
		{
			get
			{
				return this._KeyphraseReply;
			}
			set
			{
				if ((this._KeyphraseReply != value))
				{
					this.OnKeyphraseReplyChanging(value);
					this.SendPropertyChanging();
					this._KeyphraseReply = value;
					this.SendPropertyChanged("KeyphraseReply");
					this.OnKeyphraseReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSynAppsLinked", DbType="Bit NOT NULL")]
		public bool IsSynAppsLinked
		{
			get
			{
				return this._IsSynAppsLinked;
			}
			set
			{
				if ((this._IsSynAppsLinked != value))
				{
					this.OnIsSynAppsLinkedChanging(value);
					this.SendPropertyChanging();
					this._IsSynAppsLinked = value;
					this.SendPropertyChanged("IsSynAppsLinked");
					this.OnIsSynAppsLinkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RBApp.RobotBehaviors")]
	public partial class RobotBehavior : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SynAppsDeviceId;
		
		private int _SynAppsId;
		
		private string _Status;
		
		private string _ActionType;
		
		private string _ActionBody;
		
		private bool _IsSynAppsLinked;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSynAppsDeviceIdChanging(string value);
    partial void OnSynAppsDeviceIdChanged();
    partial void OnSynAppsIdChanging(int value);
    partial void OnSynAppsIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnActionBodyChanging(string value);
    partial void OnActionBodyChanged();
    partial void OnIsSynAppsLinkedChanging(bool value);
    partial void OnIsSynAppsLinkedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RobotBehavior()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppsDeviceId", DbType="NVarChar(255)")]
		public string SynAppsDeviceId
		{
			get
			{
				return this._SynAppsDeviceId;
			}
			set
			{
				if ((this._SynAppsDeviceId != value))
				{
					this.OnSynAppsDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._SynAppsDeviceId = value;
					this.SendPropertyChanged("SynAppsDeviceId");
					this.OnSynAppsDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynAppsId", DbType="Int NOT NULL")]
		public int SynAppsId
		{
			get
			{
				return this._SynAppsId;
			}
			set
			{
				if ((this._SynAppsId != value))
				{
					this.OnSynAppsIdChanging(value);
					this.SendPropertyChanging();
					this._SynAppsId = value;
					this.SendPropertyChanged("SynAppsId");
					this.OnSynAppsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(40)")]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionBody", DbType="NVarChar(4000)")]
		public string ActionBody
		{
			get
			{
				return this._ActionBody;
			}
			set
			{
				if ((this._ActionBody != value))
				{
					this.OnActionBodyChanging(value);
					this.SendPropertyChanging();
					this._ActionBody = value;
					this.SendPropertyChanged("ActionBody");
					this.OnActionBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSynAppsLinked", DbType="Bit NOT NULL")]
		public bool IsSynAppsLinked
		{
			get
			{
				return this._IsSynAppsLinked;
			}
			set
			{
				if ((this._IsSynAppsLinked != value))
				{
					this.OnIsSynAppsLinkedChanging(value);
					this.SendPropertyChanging();
					this._IsSynAppsLinked = value;
					this.SendPropertyChanged("IsSynAppsLinked");
					this.OnIsSynAppsLinkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RBApp.RobotBehaviorTalkLogs")]
	public partial class RobotBehaviorTalkLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DeviceId;
		
		private string _PersonId;
		
		private string _RobotTalk;
		
		private string _PersonTalk;
		
		private string _PersonTalkKeyphrase;
		
		private string _Status;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnRobotTalkChanging(string value);
    partial void OnRobotTalkChanged();
    partial void OnPersonTalkChanging(string value);
    partial void OnPersonTalkChanged();
    partial void OnPersonTalkKeyphraseChanging(string value);
    partial void OnPersonTalkKeyphraseChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RobotBehaviorTalkLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotTalk", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string RobotTalk
		{
			get
			{
				return this._RobotTalk;
			}
			set
			{
				if ((this._RobotTalk != value))
				{
					this.OnRobotTalkChanging(value);
					this.SendPropertyChanging();
					this._RobotTalk = value;
					this.SendPropertyChanged("RobotTalk");
					this.OnRobotTalkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonTalk", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string PersonTalk
		{
			get
			{
				return this._PersonTalk;
			}
			set
			{
				if ((this._PersonTalk != value))
				{
					this.OnPersonTalkChanging(value);
					this.SendPropertyChanging();
					this._PersonTalk = value;
					this.SendPropertyChanged("PersonTalk");
					this.OnPersonTalkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonTalkKeyphrase", DbType="NVarChar(200)")]
		public string PersonTalkKeyphrase
		{
			get
			{
				return this._PersonTalkKeyphrase;
			}
			set
			{
				if ((this._PersonTalkKeyphrase != value))
				{
					this.OnPersonTalkKeyphraseChanging(value);
					this.SendPropertyChanging();
					this._PersonTalkKeyphrase = value;
					this.SendPropertyChanged("PersonTalkKeyphrase");
					this.OnPersonTalkKeyphraseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RBApp.RobotBehaviorToPersons")]
	public partial class RobotBehaviorToPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DeviceId;
		
		private string _PersonId;
		
		private int _RobotBehaviorId;
		
		private string _Weather;
		
		private string _Status;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnRobotBehaviorIdChanging(int value);
    partial void OnRobotBehaviorIdChanged();
    partial void OnWeatherChanging(string value);
    partial void OnWeatherChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RobotBehaviorToPerson()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotBehaviorId", DbType="Int NOT NULL")]
		public int RobotBehaviorId
		{
			get
			{
				return this._RobotBehaviorId;
			}
			set
			{
				if ((this._RobotBehaviorId != value))
				{
					this.OnRobotBehaviorIdChanging(value);
					this.SendPropertyChanging();
					this._RobotBehaviorId = value;
					this.SendPropertyChanged("RobotBehaviorId");
					this.OnRobotBehaviorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weather", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Weather
		{
			get
			{
				return this._Weather;
			}
			set
			{
				if ((this._Weather != value))
				{
					this.OnWeatherChanging(value);
					this.SendPropertyChanging();
					this._Weather = value;
					this.SendPropertyChanged("Weather");
					this.OnWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
